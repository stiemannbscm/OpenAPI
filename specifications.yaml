openapi: 3.0.1
info:
  title: Todo-Listen-Verwaltung
  description: "API zur Verwaltung von Todo-Listen und deren Einträgen."
  contact:
    email: wichmann@bbs-os-brinkstr.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://127.0.0.1:5000/
tags:
- name: Listenverwaltung
  description: Verwaltung von Todo-Listen und deren Einträgen.
paths:
  /todo-list/{list_id}/entries:
    get:
      tags:
      - Listenverwaltung
      summary: "Alle Einträge einer Todo-Liste abrufen"
      operationId: getListEntries
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      responses:
        200:
          description: Erfolgreiche Antwort mit allen Einträgen der Liste
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Liste mit der angegebenen ID wurde nicht gefunden
  /todo-list/{list_id}:
    get:
      tags:
      - Listenverwaltung
      summary: "Eine spezifische Liste abrufen"
      operationId: getList
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      responses:
        200:
          description: Erfolgreiche Antwort mit den Listendetails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        404:
          description: Liste mit der angegebenen ID wurde nicht gefunden
    delete:
      tags:
      - Listenverwaltung
      summary: "Eine Todo-Liste löschen"
      operationId: deleteList
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      responses:
        200:
          description: Liste erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: success
        404:
          description: Liste mit der angegebenen ID wurde nicht gefunden
  /todo-list:
    post:
      tags:
      - Listenverwaltung
      summary: "Neue Todo-Liste erstellen"
      operationId: createList
      requestBody:
        description: Daten der neuen Liste
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: Liste erfolgreich erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        400:
          description: Fehlerhafte Anfrage
  /todo-list/{list_id}/entry:
    post:
      tags:
      - Listenverwaltung
      summary: "Eintrag zu einer Liste hinzufügen"
      operationId: addEntryToList
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      requestBody:
        description: Daten des neuen Eintrags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoEntry'
        required: true
      responses:
        200:
          description: Eintrag erfolgreich hinzugefügt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoEntry'
        404:
          description: Liste mit der angegebenen ID wurde nicht gefunden
        400:
          description: Fehlerhafte Anfrage
  /todo-list/{list_id}/entry/{entry_id}:
    put:
      tags:
      - Listenverwaltung
      summary: "Einen bestehenden Eintrag aktualisieren"
      operationId: updateEntry
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      - name: entry_id
        in: path
        description: ID des Eintrags
        required: true
        schema:
          type: string
      requestBody:
        description: Aktualisierte Daten des Eintrags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoEntry'
        required: true
      responses:
        200:
          description: Eintrag erfolgreich aktualisiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoEntry'
        404:
          description: Liste oder Eintrag mit der angegebenen ID wurde nicht gefunden
        400:
          description: Fehlerhafte Anfrage
    delete:
      tags:
      - Listenverwaltung
      summary: "Einen Eintrag aus einer Liste löschen"
      operationId: deleteEntry
      parameters:
      - name: list_id
        in: path
        description: ID der gewünschten Liste
        required: true
        schema:
          type: string
      - name: entry_id
        in: path
        description: ID des Eintrags
        required: true
        schema:
          type: string
      responses:
        200:
          description: Eintrag erfolgreich gelöscht
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: success
        404:
          description: Liste oder Eintrag mit der angegebenen ID wurde nicht gefunden
  /todo-lists:
    get:
      tags:
      - Listenverwaltung
      summary: "Alle Todo-Listen abrufen"
      operationId: getAllLists
      responses:
        200:
          description: Erfolgreiche Antwort mit allen Listen
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoList'
components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        list_id:
          type: string
          format: uuid
